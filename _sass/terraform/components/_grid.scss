// Grid and modifiers

.Grid {
    // Sass 3.3
    display: flex;
    flex-wrap: wrap;
    list-style: none;
    margin: 0;
    padding: 0;

    &--flexCells {
        & > .Grid-cell {
            display: flex;
        }
    }

    &--top {
        align-items: flex-start;
    }

    &--center {
        align-items: center;
    }

    &--bottom {
        align-items: flex-end;
    }

    &-cell {
        flex: 1;

        &--top {
            align-self: flex-start;
        }

        &--center {
            align-self: center;
        }

        &--bottom {
            align-self: flex-end;
        }
    }
}
// Grid sizing mixin
@mixin grid-sizing($name: "") {
    // Sass 3.3
    $sep: "-";

    @if $name== "" {
        $sep: "";
    }

    .Grid#{$sep}#{$name} {
        &--fit > .Grid-cell {
            flex: 1;
        }

        &--full > .Grid-cell {
            flex: 0 0 100%;
        }
    }
}
// Create the default grid-sizing modifiers by including the grid-sizing() mixin
@include grid-sizing(); // create grid-sizing modifiers for each breakpoint
@each $breakpoint in $breakpoints {
    $name: nth($breakpoint, 2);
    @include breakpoint($name) {
         @include grid-sizing($name);
    }
}
// Modifier for Grid, put gutters on grid cells
@mixin grid-gutters($name: "") {
    // Sass 3.3
    $sep: "-";

    @if $name== "" {
        $sep: "";
    }

    .#{$name}#{$sep}Grid {
        &--gutters {
            margin-left: -1em;

            & > .Grid-cell {
                padding-left: 1em;
            }
        }

        &--guttersLarge {
            margin-left: -1.5em;

            & > .Grid-cell {
                padding-left: 1.5em;
            }
        }

        &--gutters2x {
            margin-left: -2em;

            & > .Grid-cell {
                padding-left: 2em;
            }
        }

        &--gutters3x {
            margin-left: -3em;

            & > .Grid-cell {
                padding-left: 3em;
            }
        }
    }
}
// Create the Grid--gutters modifiers by including the grid-gutters() mixin
@include grid-gutters(); // Create Grid--gutters modifiers for each breakpoint
@each $breakpoint in $breakpoints {
    $name: nth($breakpoint, 2);
    @include breakpoint($name) {
         @include grid-gutters($name);
    }
}
// Mixin for creating utility columns including breakpoint sizes (xs), sm, md, lg
$num-grid-columns: 12;
@mixin sizes($name: "") {
    $sep: "-";

    @if $name == "" {
        $sep: "";
    }
    @for $i from 1 through $num-grid-columns {
        .u-#{$name}#{$sep}col {
            &#{$i} {
                // Sass 3.3
                $widthPer: 100/$num-grid-columns*$i;
                flex: none !important;
                width: #{$widthPer}% !important;

                &--offset {
                    // Sass 3.3
                    $widthPer: 100/$num-grid-columns*$i;
                    margin-left: #{$widthPer}% !important;
                }
            }
        }
    }

    .col#{$sep}#{$name} {
        &--full {
            flex: none !important;
            width: 100% !important;
        }
    }

    .hide {
        display: none;
    }

    .show#{$sep}#{$name} {
        @if $name == 'lg' {
            &--inline {
                display: inline;
            }

            &--inline-block {
                display: inline-block;
            }

            &--block {
                display: block;
            }
        }

        @if $name == 'md' {
            &--inline {
                display: inline;
            }

            &--inline-block {
                display: inline-block;
            }

            &--block {
                display: block;
            }
        }

        @if $name == 'sm' {
            &--inline {
                display: inline;
            }

            &--inline-block {
                display: inline-block;
            }

            &--block {
                display: block;
            }
        }
    }
}
// Create sizes, columns, and display properties - including breakpoint sizes (normal), sm, md, lg
@include sizes();
@each $breakpoint in $breakpoints {
    $name: nth($breakpoint, 2);
    @include breakpoint($name) {
         @include sizes($name);
    }
}
// Firefox doesn't yet support multiline Flexboxes so we
// have to fake it. Remove this once this bug is resolved
// https://bugzilla.mozilla.org/show_bug.cgi?id=702508
@supports not (flex-wrap: wrap) {
    .Grid--ffMultilineSupport {
        display: block;

        & > .Grid-cell {
            display: inline-block;
            vertical-align: top;
        }
    }
    @mixin grid-sizing($name: "") {
        $sep: "-";

        @if $name== "" {
            $sep: "";
        }

        .#{$name}#{$sep}grid--full {
            display: block;

            & > .Grid-cell {
                display: block;
            }
        }

        .#{$name}#{$sep}Grid--1of2,
        .#{$name}#{$sep}Grid--1of3,
        .#{$name}#{$sep}Grid--1of4,
        .#{$name}#{$sep}Grid--fit {
            display: flex;
        }
    }
    @include grid-sizing();
    @each $breakpoint in $breakpoints {
        $name: nth($breakpoint, 2);
        @include breakpoint($name) {
             @include grid-sizing($name);
        }
    }
}
